package com.lyq3.lambda;

/**
 * 函数式接口：
 * JAVA核心技术卷定义：对于只有一个抽象方法的接口(不包含从上级继承的)，需要这种接口的对象时，
 * 就可以提供一个Lambda表达式，这种接口称为函数式接口
 *
 *
 * 函数式接口其实本质上还是一个接口，但是它是一种特殊的接口：SAM类型的接口（Single Abstract Method）。定义了这种类型的接口，使得以其为参数的方法，可以在调用时，使用一个lambda表达式作为参数。从另一个方面说，一旦我们调用某方法，可以传入lambda表达式作为参数，则这个方法的参数类型，必定是一个函数式的接口，这个类型必定会使用@FunctionalInterface进行修饰。

 　　从SAM原则上讲，这个接口中，只能有一个函数需要被实现，但是也可以有如下例外:

 　　　　1. 默认方法与静态方法并不影响函数式接口的契约，可以任意使用，即

 　　　　　　函数式接口中可以有静态方法，一个或者多个静态方法不会影响SAM接口成为函数式接口，并且静态方法可以提供方法实现

 　　　　　　可以由 default 修饰的默认方法方法，这个关键字是Java8中新增的，为的目的就是使得某一些接口，原则上只有一个方法被实现，但是由于历史原因，不得不加入一些方法来兼容整个JDK中的API，所以就需要使用default关键字来定义这样的方法
 */
public interface LambdaInterface {
    String one(String a, String b);
}
